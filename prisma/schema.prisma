// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserPermission {
  OWNER
  MANAGER
  MEMBER
}

model User {
  id          Int              @id @default(autoincrement())
  userId      BigInt           @unique
  isAdmin     Boolean          @default(false)
  permissions UserPermission[] @default([MEMBER])
  playlists   Playlist[]
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  tracks      Track[]
  like        Like[]

  @@index([userId])
}

model Playlist {
  id      Int     @id @default(autoincrement())
  ownerId BigInt
  owner   User    @relation(fields: [ownerId], references: [userId], onDelete: Cascade, onUpdate: Cascade)
  tracks  Track[]

  slug      String   @unique @db.VarChar(16)
  name      String   @db.VarChar(30)
  viewCount Int      @default(0)
  bannerId  String   @default("") @db.VarChar(90)
  isPrivate Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  likes     Like[]
}

model Track {
  id             Int      @id @default(autoincrement())
  uniqueId       String   @unique
  title          String
  performer      String
  file_unique_id String
  thumbnail      String?  @default("")
  file_id        String
  playlistId     Int
  duration       Int      @default(0)
  playlist       Playlist @relation(fields: [playlistId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  addedById      BigInt
  addedBy        User     @relation(fields: [addedById], references: [userId], onDelete: Cascade)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Like {
  id         Int      @id @default(autoincrement())
  playlistId Int
  playlist   Playlist @relation(references: [id], fields: [playlistId])
  userId     BigInt
  user       User     @relation(fields: [userId], references: [userId])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([playlistId, userId])
}
